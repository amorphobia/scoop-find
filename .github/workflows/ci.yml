name: Rust

on:
  push:
    branches: [ master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build and release
    runs-on: windows-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - target: i686-pc-windows-msvc
          - target: x86_64-pc-windows-msvc

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: ${{ matrix.target }}
          override: true

      - name: Build release
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --target ${{ matrix.target }} --release --verbose

      - name: Copy output
        run: cp target/${{ matrix.target }}/release/scoop-find.exe scoop-find.exe

      - name: Create archive
        run: tar.exe -a -c -f scoop-find-${{ matrix.target }}.zip scoop-find.exe

      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: scoop-find-${{ matrix.target }}.zip
          path: scoop-find-${{ matrix.target }}.zip

      - name: Upload binary to release
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: scoop-find-${{ matrix.target }}.zip
          asset_name: scoop-find-${{ matrix.target }}.zip
          tag: ${{ github.ref }}
          overwrite: true

  publish:
    name: Publish to crates.io
    runs-on: ubuntu-latest
    needs: build
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}

    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: true
    - name: Build before publish
      run: cargo build --release --verbose

    - name: Publish
      uses: katyo/publish-crates@v1
      with:
        registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        ignore-unpublished-changes: true
